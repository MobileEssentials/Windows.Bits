//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.35312
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Microsoft.Bits.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Microsoft.Bits.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The activation has been paused and it&apos;s been delayed until the application is closed..
        /// </summary>
        internal static string ActivationPausedMessage {
            get {
                return ResourceManager.GetString("ActivationPausedMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The activation task for the manifest &apos;{0}&apos; cannot begin in its current state &apos;{1}&apos;..
        /// </summary>
        internal static string ActivationTaskForManifestInInvalidState {
            get {
                return ResourceManager.GetString("ActivationTaskForManifestInInvalidState", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add file.
        /// </summary>
        internal static string AddFileLabel {
            get {
                return ResourceManager.GetString("AddFileLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Deploy.
        /// </summary>
        internal static string ApplicationDeployProcessor {
            get {
                return ResourceManager.GetString("ApplicationDeployProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Application Id cannot be null or empty..
        /// </summary>
        internal static string ApplicationIdCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("ApplicationIdCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The expected argument was not provided..
        /// </summary>
        internal static string ArgumentMissing {
            get {
                return ResourceManager.GetString("ArgumentMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified value for then argument &apos;{0}&apos; has some invalid value..
        /// </summary>
        internal static string ArgumentMissing1 {
            get {
                return ResourceManager.GetString("ArgumentMissing1", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expecting options and assemblyFile or assemblyName values..
        /// </summary>
        internal static string AssemblyReferenceExpected {
            get {
                return ResourceManager.GetString("AssemblyReferenceExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The BITSDownloader cannot connect to the job &apos;{0}&apos; for the task &apos;{1}&apos; so a new BITS job will be created..
        /// </summary>
        internal static string BITSCannotConnectToJob {
            get {
                return ResourceManager.GetString("BITSCannotConnectToJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updater: Download the Server XML File..
        /// </summary>
        internal static string BitsDescription {
            get {
                return ResourceManager.GetString("BitsDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The BitsDownloader client configuration is missing. You must provide this configuration in order to use this downloader..
        /// </summary>
        internal static string BitsDownloadedNotConfigured {
            get {
                return ResourceManager.GetString("BitsDownloadedNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The downloader failed to synchronously download the files for the manifest &apos;{0}&apos;..
        /// </summary>
        internal static string BitsDownloaderFailedDownload {
            get {
                return ResourceManager.GetString("BitsDownloaderFailedDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BITSDownloader.
        /// </summary>
        internal static string BitsDownloaderNode {
            get {
                return ResourceManager.GetString("BitsDownloaderNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BITS_Files_Download_Job.
        /// </summary>
        internal static string BitsFilesDownloadDescription {
            get {
                return ResourceManager.GetString("BitsFilesDownloadDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to BITS_Files_Download_Job.
        /// </summary>
        internal static string BitsFilesDownloadJobName {
            get {
                return ResourceManager.GetString("BitsFilesDownloadJobName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updater job..
        /// </summary>
        internal static string BitsJobName {
            get {
                return ResourceManager.GetString("BitsJobName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Please, specify the Source Folder where the files specified in this manifest are located..
        /// </summary>
        internal static string BrowseForSourceFolderDescription {
            get {
                return ResourceManager.GetString("BrowseForSourceFolderDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Browse for the folder from where you are going to add the files..
        /// </summary>
        internal static string BrowseForWorkingFolderDialogText {
            get {
                return ResourceManager.GetString("BrowseForWorkingFolderDialogText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This method can only be invoked by non Windows service clients..
        /// </summary>
        internal static string CallerIsNotUpdaterService {
            get {
                return ResourceManager.GetString("CallerIsNotUpdaterService", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Downloader Manager is unable to locate and/or create the default downloader instance..
        /// </summary>
        internal static string CannotCreateDefaultDownloader {
            get {
                return ResourceManager.GetString("CannotCreateDefaultDownloader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Downloader Manager is unable to locate and/or create the downloader instance..
        /// </summary>
        internal static string CannotCreateDownloader {
            get {
                return ResourceManager.GetString("CannotCreateDownloader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s no activation task for the manifest with Id &apos;{0}&apos;..
        /// </summary>
        internal static string CannotFindActivationTaskForManifest {
            get {
                return ResourceManager.GetString("CannotFindActivationTaskForManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find the .NET Framework root folder..
        /// </summary>
        internal static string CannotFindDotNetFolder {
            get {
                return ResourceManager.GetString("CannotFindDotNetFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find the &apos;{0}&apos; executable..
        /// </summary>
        internal static string CannotFindTool {
            get {
                return ResourceManager.GetString("CannotFindTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot create the hash algorithm for the provider &apos;{0}&apos;..
        /// </summary>
        internal static string CantCreateAlgorithmProvider {
            get {
                return ResourceManager.GetString("CantCreateAlgorithmProvider", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The command &apos;{0}&apos; is unsupported..
        /// </summary>
        internal static string CommandUnsupported {
            get {
                return ResourceManager.GetString("CommandUnsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Confirm operation.
        /// </summary>
        internal static string ConfirmOperationTitle {
            get {
                return ResourceManager.GetString("ConfirmOperationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Create a new .
        /// </summary>
        internal static string CreateNewText {
            get {
                return ResourceManager.GetString("CreateNewText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 1033.
        /// </summary>
        internal static string CultureIdToGetComErrorStringsFormatted {
            get {
                return ResourceManager.GetString("CultureIdToGetComErrorStringsFormatted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no default Uri specified in the configuration for downloading the manifest..
        /// </summary>
        internal static string DefaultManifestUriMissing {
            get {
                return ResourceManager.GetString("DefaultManifestUriMissing", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloader.
        /// </summary>
        internal static string DownloaderMenuItem {
            get {
                return ResourceManager.GetString("DownloaderMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Downloaders.
        /// </summary>
        internal static string DownloadersMenuItem {
            get {
                return ResourceManager.GetString("DownloadersMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified wait time for the download has been exceeded. The download has been aborted..
        /// </summary>
        internal static string DownloadTimeoutExceeded {
            get {
                return ResourceManager.GetString("DownloadTimeoutExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary manifest contains 2 or more included manifests with the same id..
        /// </summary>
        internal static string DuplicatedManifestId {
            get {
                return ResourceManager.GetString("DuplicatedManifestId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There&apos;s not configured control to edit the configuration settings for the processor &apos;{0}&apos;..
        /// </summary>
        internal static string EditorControlNotConfigured {
            get {
                return ResourceManager.GetString("EditorControlNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must complete the Application Id field in the Application Properties tab.
        /// </summary>
        internal static string EditorMissingApplicationId {
            get {
                return ResourceManager.GetString("EditorMissingApplicationId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must complete the Application Location field in the Application Properties tab.
        /// </summary>
        internal static string EditorMissingApplicationLocation {
            get {
                return ResourceManager.GetString("EditorMissingApplicationLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must complete a description for this manifest in the Manifest Properties tab.
        /// </summary>
        internal static string EditorMissingManifestDescription {
            get {
                return ResourceManager.GetString("EditorMissingManifestDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to You must complete a Manifest ID for this manifest in the Manifest Properties tab.
        /// </summary>
        internal static string EditorMissingManifestId {
            get {
                return ResourceManager.GetString("EditorMissingManifestId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validation error.
        /// </summary>
        internal static string EditorValidationErrorCaption {
            get {
                return ResourceManager.GetString("EditorValidationErrorCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Copy.
        /// </summary>
        internal static string FileCopyProcessor {
            get {
                return ResourceManager.GetString("FileCopyProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified source file, expanded to the local file &apos;{0}&apos; cannot be found. .
        /// </summary>
        internal static string FileCopyProcessorSourceFileNotExists {
            get {
                return ResourceManager.GetString("FileCopyProcessorSourceFileNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to File Delete.
        /// </summary>
        internal static string FileDeleteProcessor {
            get {
                return ResourceManager.GetString("FileDeleteProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash value for the file specified in manifest cannot be null if hash comparison is enabled. Hash value for file {0} is null..
        /// </summary>
        internal static string FileHashIsNull {
            get {
                return ResourceManager.GetString("FileHashIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; doesn&apos;t exist..
        /// </summary>
        internal static string FileNotExists {
            get {
                return ResourceManager.GetString("FileNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder Copy.
        /// </summary>
        internal static string FolderCopyProcessor {
            get {
                return ResourceManager.GetString("FolderCopyProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Folder Delete.
        /// </summary>
        internal static string FolderDeleteProcessor {
            get {
                return ResourceManager.GetString("FolderDeleteProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to GAC Util.
        /// </summary>
        internal static string GacUtilProcessor {
            get {
                return ResourceManager.GetString("GacUtilProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find the InstallUtil executable..
        /// </summary>
        internal static string GacUtilProcessor_CantFindGacUtilExecutable {
            get {
                return ResourceManager.GetString("GacUtilProcessor_CantFindGacUtilExecutable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The processor is not configured. Specify the values for the &apos;options&apos; and either the &apos;assemblyName&apos; or &apos;assemblyFile&apos; attributes..
        /// </summary>
        internal static string GacUtilProcessor_ProcessorIsNotConfiguredActionsEtcNotFound {
            get {
                return ResourceManager.GetString("GacUtilProcessor_ProcessorIsNotConfiguredActionsEtcNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expecting options and assemblyFile or assemblyName values..
        /// </summary>
        internal static string GacUtilProcessor_ProcessorIsNotConfiguredOptionsNotFound {
            get {
                return ResourceManager.GetString("GacUtilProcessor_ProcessorIsNotConfiguredOptionsNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets or sets the application base path..
        /// </summary>
        internal static string GetSetApplicationBasePath {
            get {
                return ResourceManager.GetString("GetSetApplicationBasePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets or sets the application identifier..
        /// </summary>
        internal static string GetSetApplicationIdentifier {
            get {
                return ResourceManager.GetString("GetSetApplicationIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The authentication scheme to use against the server..
        /// </summary>
        internal static string GetSetAuthenticationScheme {
            get {
                return ResourceManager.GetString("GetSetAuthenticationScheme", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets or sets the authentication type to retrieve the manifest..
        /// </summary>
        internal static string GetSetAuthenticationType {
            get {
                return ResourceManager.GetString("GetSetAuthenticationType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets the downloader type name..
        /// </summary>
        internal static string GetSetDownloaderTypeName {
            get {
                return ResourceManager.GetString("GetSetDownloaderTypeName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets or sets the manifest location..
        /// </summary>
        internal static string GetSetManifestLocation {
            get {
                return ResourceManager.GetString("GetSetManifestLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets or sets the manifest settings..
        /// </summary>
        internal static string GetSetManifestSettings {
            get {
                return ResourceManager.GetString("GetSetManifestSettings", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The password for the user to use for the authentication scheme..
        /// </summary>
        internal static string GetSetPassword {
            get {
                return ResourceManager.GetString("GetSetPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type of server with which to authenticate..
        /// </summary>
        internal static string GetSetServerType {
            get {
                return ResourceManager.GetString("GetSetServerType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Gets or sets the update interval for the application updater service..
        /// </summary>
        internal static string GetSetUpdaterServiceInterval {
            get {
                return ResourceManager.GetString("GetSetUpdaterServiceInterval", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The name for the user to use for the authentication scheme..
        /// </summary>
        internal static string GetSetUserName {
            get {
                return ResourceManager.GetString("GetSetUserName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash Validation.
        /// </summary>
        internal static string HashValidationProcessor {
            get {
                return ResourceManager.GetString("HashValidationProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An incomplete command has been issued..
        /// </summary>
        internal static string IncompleteCommandWasIssued {
            get {
                return ResourceManager.GetString("IncompleteCommandWasIssued", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Install Util.
        /// </summary>
        internal static string InstallUtilProcessor {
            get {
                return ResourceManager.GetString("InstallUtilProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find the .NET Framework root folder..
        /// </summary>
        internal static string InstallUtilProcessor_CantFindDotNetFxRootFolder {
            get {
                return ResourceManager.GetString("InstallUtilProcessor_CantFindDotNetFxRootFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find the InstallUtil executable..
        /// </summary>
        internal static string InstallUtilProcessor_CantFindInstallUtilExecutable {
            get {
                return ResourceManager.GetString("InstallUtilProcessor_CantFindInstallUtilExecutable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tool returned an error..
        /// </summary>
        internal static string InstallUtilProcessor_InstallUtilReturnedAnError {
            get {
                return ResourceManager.GetString("InstallUtilProcessor_InstallUtilReturnedAnError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The processor is not configured. Specify the value for the &apos;action&apos; attribute..
        /// </summary>
        internal static string InstallUtilProcessor_ProcessorIsNotConfiguredActionNotFound {
            get {
                return ResourceManager.GetString("InstallUtilProcessor_ProcessorIsNotConfiguredActionNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The processor is not configured. Specify the list of assemblies to process..
        /// </summary>
        internal static string InstallUtilProcessor_ProcessorIsNotConfiguredAssembliesNotFound {
            get {
                return ResourceManager.GetString("InstallUtilProcessor_ProcessorIsNotConfiguredAssembliesNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The selected editor &apos;{1}&apos; cannot configure this type of items &apos;{0}&apos;..
        /// </summary>
        internal static string InvalidProcessorItemForEdition {
            get {
                return ResourceManager.GetString("InvalidProcessorItemForEdition", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot locate the manifest files..
        /// </summary>
        internal static string InvalidSourceFolderCaption {
            get {
                return ResourceManager.GetString("InvalidSourceFolderCaption", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Without setting the correct Source Folder for the manifest files, the manifest you are trying to open can&apos;t be edited. A new manifest will be open instead..
        /// </summary>
        internal static string InvalidSourceFolderMessage {
            get {
                return ResourceManager.GetString("InvalidSourceFolderMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest location Uri cannot be null or empty..
        /// </summary>
        internal static string LocationCannotBeNullOrEmpty {
            get {
                return ResourceManager.GetString("LocationCannotBeNullOrEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There already a manifest with id &apos;{0}&apos; included..
        /// </summary>
        internal static string ManifestAlreadyIncluded {
            get {
                return ResourceManager.GetString("ManifestAlreadyIncluded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot change the source folder to the selected folder. You can only change the current value to any parent folder..
        /// </summary>
        internal static string ManifestEditorCannotChangeFolder {
            get {
                return ResourceManager.GetString("ManifestEditorCannotChangeFolder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Some files could not be added because they aren&apos;t under the specified Source Folder..
        /// </summary>
        internal static string ManifestEditorFilesNotAdded {
            get {
                return ResourceManager.GetString("ManifestEditorFilesNotAdded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Files|*.xml|All files|*.*.
        /// </summary>
        internal static string ManifestFilesFilter {
            get {
                return ResourceManager.GetString("ManifestFilesFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Hash value for the file specified in manifest cannot be null if hash comparison is enabled. Hash value for file {0} is null..
        /// </summary>
        internal static string ManifestManager_HashValueIsNull {
            get {
                return ResourceManager.GetString("ManifestManager_HashValueIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The document {0} doesn&apos;t comply with the schema {1}..
        /// </summary>
        internal static string ManifestManager_InvalidDocument {
            get {
                return ResourceManager.GetString("ManifestManager_InvalidDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Primary manifest contains 2 or more included manifests with the same id..
        /// </summary>
        internal static string ManifestManager_PrimaryManifestDoesNotContains {
            get {
                return ResourceManager.GetString("ManifestManager_PrimaryManifestDoesNotContains", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must be a valid ID..
        /// </summary>
        internal static string ManifestManagerMustBeValidId {
            get {
                return ResourceManager.GetString("ManifestManagerMustBeValidId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest manager.
        /// </summary>
        internal static string ManifestManagerNode {
            get {
                return ResourceManager.GetString("ManifestManagerNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest Manager.
        /// </summary>
        internal static string ManifestProviderMenuItem {
            get {
                return ResourceManager.GetString("ManifestProviderMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The document {0} doesn&apos;t comply with the schema {1}.
        /// </summary>
        internal static string ManifestSchemaError {
            get {
                return ResourceManager.GetString("ManifestSchemaError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open validation.
        /// </summary>
        internal static string ManifestValidationTitle {
            get {
                return ResourceManager.GetString("ManifestValidationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to In order to configure the available processors you need to add the &apos;{0}&apos; configuration section to the ManfestEditor configuration file..
        /// </summary>
        internal static string MissingManifestEditorConfiguration {
            get {
                return ResourceManager.GetString("MissingManifestEditorConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Missing manifest editor configuration section..
        /// </summary>
        internal static string MissingManifestEditorConfigurationTitle {
            get {
                return ResourceManager.GetString("MissingManifestEditorConfigurationTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no suitable configuration to get the URI for downloading the manifest..
        /// </summary>
        internal static string MissingManifestUri {
            get {
                return ResourceManager.GetString("MissingManifestUri", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to MSI.
        /// </summary>
        internal static string MSIProcessor {
            get {
                return ResourceManager.GetString("MSIProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find the Patch package to apply..
        /// </summary>
        internal static string MsiProcessor_CantFindThePatchPackage {
            get {
                return ResourceManager.GetString("MsiProcessor_CantFindThePatchPackage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find the ProductCode to remove...
        /// </summary>
        internal static string MSIProcessor_CantFindTheProductCodeToRemove {
            get {
                return ResourceManager.GetString("MSIProcessor_CantFindTheProductCodeToRemove", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Must specify a valid value for the command argument..
        /// </summary>
        internal static string MustSpecifyValidValueForArgument {
            get {
                return ResourceManager.GetString("MustSpecifyValidValueForArgument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no configuration available for initializing ApplicationId.
        /// </summary>
        internal static string NoConfigurationToGetApplicationId {
            get {
                return ResourceManager.GetString("NoConfigurationToGetApplicationId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No.
        /// </summary>
        internal static string NoString {
            get {
                return ResourceManager.GetString("NoString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Configuration File|*.config.
        /// </summary>
        internal static string OpenCryptographyConfigurationFilter {
            get {
                return ResourceManager.GetString("OpenCryptographyConfigurationFilter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open cryptography configuration.
        /// </summary>
        internal static string OpenCryptographyConfigurationLabel {
            get {
                return ResourceManager.GetString("OpenCryptographyConfigurationLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Open a manifest.
        /// </summary>
        internal static string OpenManifestTitle {
            get {
                return ResourceManager.GetString("OpenManifestTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified path not exists {0}..
        /// </summary>
        internal static string PathDoesNotExists {
            get {
                return ResourceManager.GetString("PathDoesNotExists", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expecting path value..
        /// </summary>
        internal static string PathExpected {
            get {
                return ResourceManager.GetString("PathExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is already a processor with the specified name &apos;{0}&apos;..
        /// </summary>
        internal static string ProcessorAlreadyIncluded {
            get {
                return ResourceManager.GetString("ProcessorAlreadyIncluded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  The processor is not configured. Values for some attributes are missing..
        /// </summary>
        internal static string ProcessorNotConfigured {
            get {
                return ResourceManager.GetString("ProcessorNotConfigured", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The processor &apos;{0}&apos; OnError() method failed..
        /// </summary>
        internal static string ProcessorOnErrorException {
            get {
                return ResourceManager.GetString("ProcessorOnErrorException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Ready..
        /// </summary>
        internal static string ReadyString {
            get {
                return ResourceManager.GetString("ReadyString", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Can&apos;t create the instance for the type &apos;{0}&apos; on the assembly {1}..
        /// </summary>
        internal static string RES_CantCreateInstanceOfTypeAssembly {
            get {
                return ResourceManager.GetString("RES_CantCreateInstanceOfTypeAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly &apos;{0}&apos; can&apos;t be loaded.  
        ///		Check that the assembly uses the FULLY QUALIFIED NAME, which consists of the assembly name, version, culture, and PublicKeyToken..
        /// </summary>
        internal static string RES_CantLoadAssembly {
            get {
                return ResourceManager.GetString("RES_CantLoadAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The type &apos;{0}&apos; can&apos;t be loaded within the assembly {1}..
        /// </summary>
        internal static string RES_CantLoadTypeForAssembly {
            get {
                return ResourceManager.GetString("RES_CantLoadTypeForAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration file &apos;{0}&apos; 
        ///		defines an invalid path at the node client/xmlFile; 
        ///		the invalid value is &apos;{1}&apos;, this file must exist..
        /// </summary>
        internal static string RES_ClientXmlFileMustExist {
            get {
                return ResourceManager.GetString("RES_ClientXmlFileMustExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 4991D34B-80A1-4291-83B6-3328366B9097.
        /// </summary>
        internal static string RES_CLSID_BackgroundCopyManager {
            get {
                return ResourceManager.GetString("RES_CLSID_BackgroundCopyManager", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The key passed to the Validator was null.  
        ///		Check to be sure that the XML path &quot;validator/key&quot; is correct and that the key node contains a valid cryptographic key 
        ///		for the type of Validator being used.  A common error is to nest the key too deeply giving the Validator an unexpected XML structure. 
        ///		Other errors include: giving the wrong kind of key, encoding the key incorrectly, or omitting the key entirely..
        /// </summary>
        internal static string RES_CouldNotFindCryptographicKey {
            get {
                return ResourceManager.GetString("RES_CouldNotFindCryptographicKey", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error downloading files from the server for the application &apos;{0}&apos;, 
        ///		the following message was in the exception: &apos;{0}&apos;..
        /// </summary>
        internal static string RES_ErrorDownloadingJob {
            get {
                return ResourceManager.GetString("RES_ErrorDownloadingJob", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error initializing Downloader provider: 
        ///		type: &apos;{0}&apos;, 
        ///		assembly: &apos;{1}&apos;..
        /// </summary>
        internal static string RES_ErrorInitializingDownloader {
            get {
                return ResourceManager.GetString("RES_ErrorInitializingDownloader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error initializing Validator provider, 
        ///		type:&apos;{0}&apos;, 
        ///		assembly:&apos;{1}&apos;..
        /// </summary>
        internal static string RES_ErrorInitializingValidator {
            get {
                return ResourceManager.GetString("RES_ErrorInitializingValidator", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The string argument is an invalid format..
        /// </summary>
        internal static string RES_EXCEPTION_ArgumentInvalidHexFormat {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_ArgumentInvalidHexFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to When attempting to process a FULLY QUALIFIED TYPE AND ASSEMBLY NAME, there were fewer than FIVE total comma-delimited parts.  Check
        ///		 the configuration file, and be sure that the type and assembly attribute contents are correct. The assembly must specify NAME, VERSION, CULTURE, PUBLICKEYTOKEN.
        ///		   Instead what was specified was: 
        ///		   &apos;{0}&apos;, &apos;{1}&apos;, &apos;{2}&apos;, &apos;{3}&apos;, &apos;{4}&apos;.
        ///		   .
        /// </summary>
        internal static string RES_EXCEPTION_BadTypeArgumentInFactory {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_BadTypeArgumentInFactory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration file at &apos;{0}&apos; contains an invalid value for the client/baseDir node.
        ///		The path given for the client&apos;s base directory was &apos;{1}&apos;; this path does not exist.
        ///		Be sure the baseDir exists on the client..
        /// </summary>
        internal static string RES_EXCEPTION_BaseDirMustExist {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_BaseDirMustExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The BITS service returned an error for the job with the ID &apos;{0}&apos;; 
        ///		the job&apos;s name and description are &apos;{1}&apos; and &apos;{2}&apos;.  
        ///		The BITS service error message for this job is 
        ///		&apos;{3}&apos;.
        ///		This job has been canceled, and the DownloaderManager will attempt it again.  If you see this error frequently, you may have a mis-configuration, or another 
        ///		administrator process/user is canceling BITS jobs.
        ///		It is also possible that some mis-configuration of the Manifest file is causing BITS to have trouble with a s [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RES_EXCEPTION_BitsBackgroundCopyError {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_BitsBackgroundCopyError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The BITS downloader experienced an unexpected error.  It may have been asked to check job status for a job ID that no longer exists, 
        ///		or a job that was canceled.  The jobID was &apos;{0}&apos;, the job name was &apos;{1}&apos;, and the description was &apos;{2}&apos;..
        /// </summary>
        internal static string RES_EXCEPTION_BitsOtherError {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_BitsOtherError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not create an instance of the type specified by its file name and interface to return.  The file name given was &apos;{0}&apos; and the expected interface was &apos;{1}&apos;.  Check
        ///		 the configuration file, and be sure that the path is correct.  Also check that the assembly specified by path has at least one type that implements the given interface.  
        ///		 Likewise, the TYPE that must be constructed must be specified by the FULL TYPE NAME, not just the class name.  Type names are NOT necessarily always just the &quot;assem [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RES_EXCEPTION_CantCreateInstanceFromFilePath {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_CantCreateInstanceFromFilePath", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not create an instance of the requested object in the Factory.  
        ///		Assembly = &apos;{0}&apos;, 
        ///		Type = &apos;{1}&apos;.  
        ///		Check the configuration file--this is the most common source of this error.  
        ///		Assemblies must be specified by their FULLY QUALIFIED NAME, including name, version, culture, and public key token.  
        ///		Likewise, the TYPE that must be constructed must be specified by the FULL TYPE NAME, not just the class name.  
        ///		Type names are NOT necessarily just the &quot;assembly.type&quot; form; 
        ///		type names dep [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RES_EXCEPTION_CantCreateInstanceUsingActivate {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_CantCreateInstanceUsingActivate", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The assembly and type specified could not be loaded.  
        ///		The assembly name given is &apos;{0}&apos; 
        ///		and the type name given is &apos;{1}&apos;.  
        ///		Check to be SURE that the FULLY QUALIFIED ASSEMBLY NAME with assembly, version, culture, and PublicKeyToken is specified.  Check 
        ///		also that the type name is the FULL type name not the abbreviated type.  It is common to have incorrect versions or PublicKeyTokens, 
        ///		validate these and correct the config.  Likewise, the TYPE that must be constructed must be specified by the [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RES_EXCEPTION_CantLoadAssembly {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_CantLoadAssembly", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The metadata file &apos;{0}&apos; can&apos;t be removed..
        /// </summary>
        internal static string RES_EXCEPTION_CantRemoveMetadataFile {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_CantRemoveMetadataFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to SecurityException thrown while trying to register with ProcessExit event.  Make sure the assembly/user have adequate permissions.
        ///		.
        /// </summary>
        internal static string RES_EXCEPTION_ConfigCantLoadInAUConstructor {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_ConfigCantLoadInAUConstructor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not deserialize an instance of ClientApplicationInfo:  
        ///		error message was &apos;{0}&apos;.  
        ///		The path to the Server Manifest was &apos;{1}&apos;..
        /// </summary>
        internal static string RES_EXCEPTION_CouldNotDeserializeClientApplicationInfo {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_CouldNotDeserializeClientApplicationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Could not deserialize an instance of ServerApplicationInfo:  
        ///		error message was &apos;{0}&apos;.  
        ///		The path to the Server Manifest was &apos;{1}&apos;..
        /// </summary>
        internal static string RES_EXCEPTION_CouldNotDeserializeServerApplicationInfo {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_CouldNotDeserializeServerApplicationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error during validation of the configuration file.  
        ///		The configuration file MUST pass validation according to the schema; 
        ///		please check that the configuration is well-formed and valid, and that it conforms to the XSD schema.  
        ///		Also avoid white space within elements.  
        ///		The validation message was: &apos;{0}&apos;.&quot;
        ///		.
        /// </summary>
        internal static string RES_EXCEPTION_DocumentNotValidated {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_DocumentNotValidated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The application name &apos;{0}&apos; is a duplicate.  Application names must be unique to each Updater configuration file; 
        ///		if you wish to update multiple applications simultaneously, ensure that their names in the config file are unique..
        /// </summary>
        internal static string RES_EXCEPTION_DuplicateApplicationName {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_DuplicateApplicationName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error while saving the ClientApplicationInfo object.  
        ///		This object corresponds to the &apos;AppStart.exe.config&apos; file, and is used to update version and path information so that the &apos;shim&apos; 
        ///		AppStart can find the newly updated application.  
        ///		The information passed in to Save this document was:  &apos;{0}&apos;,&apos;{1}&apos;,&apos;{2}&apos;.
        ///		.
        /// </summary>
        internal static string RES_EXCEPTION_ErrorSavingClientApplicationInfo {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_ErrorSavingClientApplicationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error while stopping the Updater.  The application that was being stopped is named &apos;{0}&apos;.
        ///		This error often occurs when multiple threads attempt to stop the update at the same time..
        /// </summary>
        internal static string RES_EXCEPTION_ErrorStopUpdater {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_ErrorStopUpdater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The metadata file (the Server Manifest) can&apos;t be downloaded for the application &apos;{0}&apos;.
        ///		Either the manifest is unavailable (check download URL in Updater config file), the downloader failed, or 
        ///		the Manifest failed validation..
        /// </summary>
        internal static string RES_EXCEPTION_MetadataCantBeDownloadedOrNotValid {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_MetadataCantBeDownloadedOrNotValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The polling interval is too short, it should be 60 seconds or more.  Setting it to less can cause problems with locked files, 
        ///		and may produce race conditions in which manifests are downloaded while other files are still in process..
        /// </summary>
        internal static string RES_EXCEPTION_PollingIntervalTooShort {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_PollingIntervalTooShort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error processing application the &apos;{0}&apos;, error message: &apos;{1}&apos;..
        /// </summary>
        internal static string RES_EXCEPTION_ProcessingApplication {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_ProcessingApplication", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error when attempting to start the processor.
        ///		The given processor had the following attributes:  
        ///		Path--&apos;{0}&apos;; 
        ///		Type--&apos;{1}&apos;; 
        ///		Assembly--&apos;{2}&apos;.
        ///		.
        /// </summary>
        internal static string RES_EXCEPTION_RunningIPP {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_RunningIPP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The service is already running on this machine; please run only a single instance at a time..
        /// </summary>
        internal static string RES_EXCEPTION_ServiceAlreadyRunning {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_ServiceAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error setting up the download directories; DownloaderManager was attempting to create the destination directories and had an exception.  
        ///		Check that the destination directories are reachable; that they are not locked; that the process has permission to access them; 
        ///		and that the paths given in the Updater configuration for this application point to directories which exist.
        ///		 The file source path causing the error was 
        ///		 &apos;{0}&apos;, 
        ///		 and the destination path was &apos;{1}&apos;..
        /// </summary>
        internal static string RES_EXCEPTION_SettingUpDownloadDirectories {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_SettingUpDownloadDirectories", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error signing the file at path &apos;{0}&apos;.
        ///		.
        /// </summary>
        internal static string RES_EXCEPTION_SigningFile {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_SigningFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error signing xml.
        ///		.
        /// </summary>
        internal static string RES_EXCEPTION_SigningXml {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_SigningXml", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error when stopping the processor thread named &apos;{0}&apos;.  
        ///		It was interrupted and threw a ThreadInterruptException; the message returned was: 
        ///		{1}.
        ///		.
        /// </summary>
        internal static string RES_EXCEPTION_StoppingIPP {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_StoppingIPP", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The thread named &apos;{0}&apos; had to be interrupted.
        ///		.
        /// </summary>
        internal static string RES_EXCEPTION_ThreadInterruptedException {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_ThreadInterruptedException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error when attempting to access a directory:
        ///		&apos;{0}&apos;.
        ///		The exception message was:
        ///		&apos;{1}&apos;.
        ///		Most often this occurs when the directory that is being deleted/overwritten is marked &quot;Read-Only&quot;; be sure this is not the case, 
        ///		or the Updater will not be able to manipulate this directory..
        /// </summary>
        internal static string RES_EXCEPTION_UnauthorizedAccessDirectory {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_UnauthorizedAccessDirectory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There was an error when attempting to access a file:
        ///		&apos;{0}&apos;.
        ///		The exception message was:
        ///		&apos;{1}&apos;.
        ///		Most often this occurs when the file that is being deleted/overwritten is marked &quot;Read-Only&quot;; be sure this is not the case, 
        ///		or the Updater will not be able to manipulate this file..
        /// </summary>
        internal static string RES_EXCEPTION_UnauthorizedAccessFile {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_UnauthorizedAccessFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A UNC file path was used as the source for BITS downloading: 
        ///		&apos;{0}&apos;; this is invalid, source files for BITS must be URLs.  
        ///		Check the Server Manifest and be sure paths given to BITS as source paths are URLs..
        /// </summary>
        internal static string RES_EXCEPTION_UncSourcePathToBits {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_UncSourcePathToBits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unexpected error using the IDownloader of type &apos;{0}&apos; 
        ///		and from assembly &apos;{1}&apos; when a job was posted..
        /// </summary>
        internal static string RES_EXCEPTION_UsingDownloader {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_UsingDownloader", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///		The download job has waited {0} milliseconds for the download.
        ///		The affected application &apos;{1}&apos; waited more than twice the allotted polling period for this download;
        ///		it is canceling and restarting the update job..
        /// </summary>
        internal static string RES_EXCEPTION_WaitedMoreThanTwicePollPeriod {
            get {
                return ResourceManager.GetString("RES_EXCEPTION_WaitedMoreThanTwicePollPeriod", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The day of week part must be an integer between 0 and 6..
        /// </summary>
        internal static string RES_ExceptionExtendedFormatIncorrectDayOfWeekPart {
            get {
                return ResourceManager.GetString("RES_ExceptionExtendedFormatIncorrectDayOfWeekPart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The day part must be an integer between 0 and 31..
        /// </summary>
        internal static string RES_ExceptionExtendedFormatIncorrectDayPart {
            get {
                return ResourceManager.GetString("RES_ExceptionExtendedFormatIncorrectDayPart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The hour part must be an integer between 0 and 23..
        /// </summary>
        internal static string RES_ExceptionExtendedFormatIncorrectHourPart {
            get {
                return ResourceManager.GetString("RES_ExceptionExtendedFormatIncorrectHourPart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The minute part must be an integer between 0 and 59..
        /// </summary>
        internal static string RES_ExceptionExtendedFormatIncorrectMinutePart {
            get {
                return ResourceManager.GetString("RES_ExceptionExtendedFormatIncorrectMinutePart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The month part must be an integer between 0 and 12..
        /// </summary>
        internal static string RES_ExceptionExtendedFormatIncorrectMonthPart {
            get {
                return ResourceManager.GetString("RES_ExceptionExtendedFormatIncorrectMonthPart", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration document is not a well-formed xml document..
        /// </summary>
        internal static string RES_ExceptionInvalidConfigurationDocument {
            get {
                return ResourceManager.GetString("RES_ExceptionInvalidConfigurationDocument", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The extended format is invalid. Cache expiration time must be specified..
        /// </summary>
        internal static string RES_ExceptionInvalidExtendedFormatArguments {
            get {
                return ResourceManager.GetString("RES_ExceptionInvalidExtendedFormatArguments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The file &apos;{0}&apos; cannot be downloaded. 
        ///		The failure occurred in the synchronous download method.  
        ///		The Server Manifest must be downloaded using this synchronous technique.  
        ///		It may be that the configuration file&apos;s &apos;maxWaitXmlFile&apos; is too short.  Set it to at least 60,000 milliseconds 
        ///		(60 seconds; the value is expected to be in milliseconds).  
        ///		If you see this error repeatedly, it is probably because the wait timeout is too short, there are network problems, 
        ///		or the BITS service is not respo [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string RES_FileNotDownloaded {
            get {
                return ResourceManager.GetString("RES_FileNotDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to A general error occurred updating the application &apos;{0}&apos;..
        /// </summary>
        internal static string RES_GeneralUpdaterError {
            get {
                return ResourceManager.GetString("RES_GeneralUpdaterError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid client version info &apos;{0}&apos;..
        /// </summary>
        internal static string RES_InvalidClientVersionInfo {
            get {
                return ResourceManager.GetString("RES_InvalidClientVersionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The XML file on the client application is invalid (or incomplete), the following XPath must be satisfied: 
        ///		&apos;/configuration/appUpdater/InstalledVersion&apos;..
        /// </summary>
        internal static string RES_InvalidClientXmlFile {
            get {
                return ResourceManager.GetString("RES_InvalidClientXmlFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration file &apos;{0}&apos; 
        ///		defines an invalid path at the node client/appLauncher, 
        ///		the invalid value is &apos;{1}&apos;..
        /// </summary>
        internal static string RES_InvalidPathOnAppLauncher {
            get {
                return ResourceManager.GetString("RES_InvalidPathOnAppLauncher", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration file &apos;{0}&apos; 
        ///		defines an invalid path at the node client/baseDir, 
        ///		the invalid value is &apos;{1}&apos;..
        /// </summary>
        internal static string RES_InvalidPathOnBaseDir {
            get {
                return ResourceManager.GetString("RES_InvalidPathOnBaseDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration file &apos;{0}&apos; defines an invalid path at the node client/baseDir, 
        ///		the baseDir path must be rooted, 
        ///		the invalid value is &apos;{1}&apos;..
        /// </summary>
        internal static string RES_InvalidPathOnBaseDirMustBeRooted {
            get {
                return ResourceManager.GetString("RES_InvalidPathOnBaseDirMustBeRooted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The configuration file &apos;{0}&apos; 
        ///		defines an invalid path at the node client/tempDir, 
        ///		the invalid value is &apos;{1}&apos;..
        /// </summary>
        internal static string RES_InvalidPathOnTempDir {
            get {
                return ResourceManager.GetString("RES_InvalidPathOnTempDir", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The following file (to be downloaded as part of update) 
        ///		named &apos;{0}&apos; specified in the server XML (manifest) file is invalid..
        /// </summary>
        internal static string RES_InvalidServerFileName {
            get {
                return ResourceManager.GetString("RES_InvalidServerFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid server version info &apos;{0}&apos;..
        /// </summary>
        internal static string RES_InvalidServerVersionInfo {
            get {
                return ResourceManager.GetString("RES_InvalidServerVersionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The XML file downloaded from the server is invalid (or incomplete), the following XPath must be satisfied: 
        ///		&apos;/configuration/appUpdater/availableversion&apos;..
        /// </summary>
        internal static string RES_InvalidServerXmlFile {
            get {
                return ResourceManager.GetString("RES_InvalidServerXmlFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The downloaded server XML file defines a URI that is invalid--&apos;{0}&apos;..
        /// </summary>
        internal static string RES_InvalidServerXmlFileUpdateLocation {
            get {
                return ResourceManager.GetString("RES_InvalidServerXmlFileUpdateLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Checking on updates for application &apos;{0}&apos;.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_CheckingOnUpdates {
            get {
                return ResourceManager.GetString("RES_MESSAGE_CheckingOnUpdates", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The version currently on the client for application &apos;{0}&apos; is {1} and the version on the server is {2}.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_ClientServerVersionCheck {
            get {
                return ResourceManager.GetString("RES_MESSAGE_ClientServerVersionCheck", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading Server Manifest file from &apos;{0}&apos; to deserialize into a ServerApplicationInfo object.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_DeserializeServerApplicationInfo {
            get {
                return ResourceManager.GetString("RES_MESSAGE_DeserializeServerApplicationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Reading the configuration file &apos;{0}&apos; to deserialize it into a ClientApplicationInfo object.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_DeserializingClientApplicationInfo {
            get {
                return ResourceManager.GetString("RES_MESSAGE_DeserializingClientApplicationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   DEST FILE:  &apos;{0}&apos;  
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_DestFileName {
            get {
                return ResourceManager.GetString("RES_MESSAGE_DestFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Status updated with job id &apos;{0}&apos; for the application &apos;{1}&apos;.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_DnldJobStatusUpdated {
            get {
                return ResourceManager.GetString("RES_MESSAGE_DnldJobStatusUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///Download Completed {0},{1},{2},{3},{4}.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_DownloadComplete {
            get {
                return ResourceManager.GetString("RES_MESSAGE_DownloadComplete", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Manifest downloaded, now commencing download of application files for application &apos;{0}&apos; 
        ///		to destination temporary folder &apos;{1}&apos;
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_DownloadingAppFiles {
            get {
                return ResourceManager.GetString("RES_MESSAGE_DownloadingAppFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Server Manifest successfully downloaded to location &apos;{0}&apos;.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_DownloadManifestCompleted {
            get {
                return ResourceManager.GetString("RES_MESSAGE_DownloadManifestCompleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   DOWNLOAD STARTED:   Downloading manifest for the application &apos;{0}&apos;.  Time started: {1}
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_DownloadManifestStarted {
            get {
                return ResourceManager.GetString("RES_MESSAGE_DownloadManifestStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   FILE VALIDATION FAILED:    
        ///		The file &apos;{0}&apos; failed validation.  
        ///		Stopping validation, deleting all files to prevent questionable files from remaining.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_FileFailedValidation {
            get {
                return ResourceManager.GetString("RES_MESSAGE_FileFailedValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The local files must be updated for the application &apos;{0}&apos;.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_FilesMustBeUpdated {
            get {
                return ResourceManager.GetString("RES_MESSAGE_FilesMustBeUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;{0}&apos; PASSED VALIDATION.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_FileValidated {
            get {
                return ResourceManager.GetString("RES_MESSAGE_FileValidated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Able to instantiate putative IActivationProcessor, but it would not cast to IActivationProcessor interface.  
        ///		The file path for IPP was &apos;{0}&apos; 
        ///		and the discovered type is &apos;{1}&apos;.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_IPPWouldNotCast {
            get {
                return ResourceManager.GetString("RES_MESSAGE_IPPWouldNotCast", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   MANIFEST VALIDATION FAILED:  
        ///		The server Manifest located at 
        ///		&apos;{0}&apos; failed validation.  
        ///		It is being deleted; its signature did not match the signature of the file that was downloaded.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_ManifestFailedValidation {
            get {
                return ResourceManager.GetString("RES_MESSAGE_ManifestFailedValidation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The downloader failed to synchronously download a file with the path &apos;{0}&apos;.  
        ///		The cumulative error message generated during its attempts was: &apos;{1}&apos;..
        /// </summary>
        internal static string RES_MESSAGE_ManifestFileNotDownloaded {
            get {
                return ResourceManager.GetString("RES_MESSAGE_ManifestFileNotDownloaded", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There is no new version update available on the server for the application &apos;{0}&apos;
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_NoNewVersionOnServer {
            get {
                return ResourceManager.GetString("RES_MESSAGE_NoNewVersionOnServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Now saving ClientApplicationInfo object to file &apos;{0}&apos;.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_SavingClientApplicationInfo {
            get {
                return ResourceManager.GetString("RES_MESSAGE_SavingClientApplicationInfo", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///SOURCE: &apos;{0}&apos;
        ///DEST:   &apos;{1}&apos;
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_SettingUpFileForDownload {
            get {
                return ResourceManager.GetString("RES_MESSAGE_SettingUpFileForDownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to   SOURCE FILE:  &apos;{0}&apos;  
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_SourceFileName {
            get {
                return ResourceManager.GetString("RES_MESSAGE_SourceFileName", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Updater Log file located at &apos;{0}&apos; cannot be opened to write to.  Check that the log file is in a directory that the user of Updater
        ///		 has access to, and be sure that the file itself can be created and written to by that user.  Also be sure there&apos;s enough disk space to 
        ///		 accommodate the log file..
        /// </summary>
        internal static string RES_MESSAGE_UpdaterLogCannotBeWritten {
            get {
                return ResourceManager.GetString("RES_MESSAGE_UpdaterLogCannotBeWritten", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The logging file&apos;s directory specified in the configuration file does not exist.  
        ///		The path given was &apos;{0}&apos;; please ensure
        ///		that the log file&apos;s directory exists, or logging will not function..
        /// </summary>
        internal static string RES_MESSAGE_UpdaterLogDirectoryNotFound {
            get {
                return ResourceManager.GetString("RES_MESSAGE_UpdaterLogDirectoryNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updating the local configuration file, probably AppStart.exe.config depending on mode of deployment, for the application &apos;{0}&apos;.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_UpdatingLocalConfigFile {
            get {
                return ResourceManager.GetString("RES_MESSAGE_UpdatingLocalConfigFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validating individual files for the application &apos;{0}&apos;.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_ValidatingFiles {
            get {
                return ResourceManager.GetString("RES_MESSAGE_ValidatingFiles", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Validating the downloaded server Manifest file located at: 
        ///		&apos;{0}&apos;.
        ///		.
        /// </summary>
        internal static string RES_MESSAGE_ValidatingManifest {
            get {
                return ResourceManager.GetString("RES_MESSAGE_ValidatingManifest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Restarted a DownloaderManager for the application &apos;{0}&apos; at date/time &apos;{1}&apos;.
        ///		.
        /// </summary>
        internal static string RES_RestartedUpdater {
            get {
                return ResourceManager.GetString("RES_RestartedUpdater", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to DownloaderManager thread named &apos;{0}&apos; had to be interrupted; it did not respond in the allotted timeout to the stop event.
        ///		.
        /// </summary>
        internal static string RES_StopUpdaterInterruptThread {
            get {
                return ResourceManager.GetString("RES_StopUpdaterInterruptThread", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The BitsDownloader was interrupted during a download by a ThreadInterruptException 
        ///		while downloading the file &apos;{0}&apos;.  
        ///		Usually this means the Updater was stopped in the middle of a download job and may simply mean the Service or other 
        ///		consuming application was stopped manually.
        ///		.
        /// </summary>
        internal static string RES_TieInBits {
            get {
                return ResourceManager.GetString("RES_TieInBits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to load configuration from the XML configuration file: &apos;{0}&apos;.  
        ///		This can be caused by a number of problems, but the most common problem is an incorrectly configured Updater configuration file.  
        ///		The most probable sources of error are: missing nodes, incorrect attribute names, white space within attributes or within elements, 
        ///		white space between elements in the same sub-node, badly formed xml, or xml that does not conform to the ConfigSchema.XSD..
        /// </summary>
        internal static string RES_UnableToLoadConfiguration {
            get {
                return ResourceManager.GetString("RES_UnableToLoadConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The validation process fails with the following exception message: 
        ///		&apos;{0}&apos; 
        ///		validating the file &apos;{1}&apos; for the application &apos;{2}&apos;..
        /// </summary>
        internal static string RES_ValidationException {
            get {
                return ResourceManager.GetString("RES_ValidationException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The validation process failed for the file &apos;{0}&apos; within the application &apos;{1}&apos;..
        /// </summary>
        internal static string RES_ValidationFailed {
            get {
                return ResourceManager.GetString("RES_ValidationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to yyyy_MM_dd_HH:mm:ss.
        /// </summary>
        internal static string RESX_DateTimeToStringFormat {
            get {
                return ResourceManager.GetString("RESX_DateTimeToStringFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to yyyy_MM_dd_HH_mm_ss.
        /// </summary>
        internal static string RESX_DateTimeToStringFormatLogFile {
            get {
                return ResourceManager.GetString("RESX_DateTimeToStringFormatLogFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Updater has started; the target application&apos;s name is &apos;{0}&apos;.  Time started:  {1}..
        /// </summary>
        internal static string RESX_MESSAGE_UpdaterStarted {
            get {
                return ResourceManager.GetString("RESX_MESSAGE_UpdaterStarted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The Updater is stopping updates for the application named &apos;{0}&apos;.  Time stopped:  {1}..
        /// </summary>
        internal static string RESX_MESSAGE_UpdaterStopped {
            get {
                return ResourceManager.GetString("RESX_MESSAGE_UpdaterStopped", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service configuration.
        /// </summary>
        internal static string ServiceConfigurationMenuItem {
            get {
                return ResourceManager.GetString("ServiceConfigurationMenuItem", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Service Configuration.
        /// </summary>
        internal static string ServiceConfigurationNode {
            get {
                return ResourceManager.GetString("ServiceConfigurationNode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expecting source and destination values..
        /// </summary>
        internal static string SourceAndDestinationExpected {
            get {
                return ResourceManager.GetString("SourceAndDestinationExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expecting the &apos;source&apos; value.
        /// </summary>
        internal static string SourceExpected {
            get {
                return ResourceManager.GetString("SourceExpected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest is not valid. The validation errors are: .
        /// </summary>
        internal static string TheManifestIsInvalid {
            get {
                return ResourceManager.GetString("TheManifestIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The manifest is valid..
        /// </summary>
        internal static string TheManifestIsValid {
            get {
                return ResourceManager.GetString("TheManifestIsValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tool could not load the manifest schema to perform the validation..
        /// </summary>
        internal static string ToolCannotLoadManifestSchema {
            get {
                return ResourceManager.GetString("ToolCannotLoadManifestSchema", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The tool &apos;{0}&apos; exited with the error code &apos;{1}&apos;..
        /// </summary>
        internal static string ToolGeneratedError {
            get {
                return ResourceManager.GetString("ToolGeneratedError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Type &quot;help&quot; at any time to get usage information..
        /// </summary>
        internal static string TypeHelpToGetUsageInformation {
            get {
                return ResourceManager.GetString("TypeHelpToGetUsageInformation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uncompress.
        /// </summary>
        internal static string UncompressProcessor {
            get {
                return ResourceManager.GetString("UncompressProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Cannot find the Expand.exe executable..
        /// </summary>
        internal static string UncompressProcessor_CantFindExpandTool {
            get {
                return ResourceManager.GetString("UncompressProcessor_CantFindExpandTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Uncompress failed with exit code &apos;{0}&apos;..
        /// </summary>
        internal static string UncompressProcessor_FailedWithExitCode {
            get {
                return ResourceManager.GetString("UncompressProcessor_FailedWithExitCode", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The processor is not configured. Specify the values for the &apos;options&apos; and either the &apos;assemblyName&apos; or &apos;assemblyFile&apos; attributes..
        /// </summary>
        internal static string UncompressProcessor_ProcessorIsNotConfiguredOptionsEtcNotFound {
            get {
                return ResourceManager.GetString("UncompressProcessor_ProcessorIsNotConfiguredOptionsEtcNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expecting the &apos;source&apos; value and optionally the &apos;destination&apos; value..
        /// </summary>
        internal static string UncompressProcessor_ProcessorIsNotConfiguredSourceEtcNotFound {
            get {
                return ResourceManager.GetString("UncompressProcessor_ProcessorIsNotConfiguredSourceEtcNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to path which is not supported..
        /// </summary>
        internal static string UncPathUnsupported {
            get {
                return ResourceManager.GetString("UncPathUnsupported", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There unsaved changes. Do you want to proceed and lose those changes?.
        /// </summary>
        internal static string UnsavedChangesProceedQuestion {
            get {
                return ResourceManager.GetString("UnsavedChangesProceedQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to There are unsaved changes. Do you really want to quit?.
        /// </summary>
        internal static string UnsavedChangesQuitQuestion {
            get {
                return ResourceManager.GetString("UnsavedChangesQuitQuestion", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updater Application Block.
        /// </summary>
        internal static string UpdaterApplicationBlock {
            get {
                return ResourceManager.GetString("UpdaterApplicationBlock", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Updater Application Block Configuration.
        /// </summary>
        internal static string UpdaterApplicationBlockConfiguration {
            get {
                return ResourceManager.GetString("UpdaterApplicationBlockConfiguration", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This method is intended to be used only in a windows service environment..
        /// </summary>
        internal static string UpdaterManagerOnlyToBeUsedByWindows {
            get {
                return ResourceManager.GetString("UpdaterManagerOnlyToBeUsedByWindows", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This update cannot be canceled. The Activation phase has already started..
        /// </summary>
        internal static string UpdaterManagerUpdateCannotBeCanceled {
            get {
                return ResourceManager.GetString("UpdaterManagerUpdateCannotBeCanceled", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source and computed file hashes don&apos;t match..
        /// </summary>
        internal static string ValidateHashExceptionMessage {
            get {
                return ResourceManager.GetString("ValidateHashExceptionMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Expecting source value..
        /// </summary>
        internal static string ValidateHashProcessor_ExpectingSourceValue {
            get {
                return ResourceManager.GetString("ValidateHashProcessor_ExpectingSourceValue", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The specified file ({0}) cannot be addressed into the manifest..
        /// </summary>
        internal static string ValidateHashProcessor_FileNotFound {
            get {
                return ResourceManager.GetString("ValidateHashProcessor_FileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The processor is not configured. Specify the value for the &apos;source&apos; attribute..
        /// </summary>
        internal static string ValidateHashProcessor_ProcessorIsNotConfiguredSourceEtcNotFound {
            get {
                return ResourceManager.GetString("ValidateHashProcessor_ProcessorIsNotConfiguredSourceEtcNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The source file doesn&apos;t exists..
        /// </summary>
        internal static string ValidateHashProcessor_SourceFileNotFound {
            get {
                return ResourceManager.GetString("ValidateHashProcessor_SourceFileNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Wait For Exit.
        /// </summary>
        internal static string WaitForExitProcessor {
            get {
                return ResourceManager.GetString("WaitForExitProcessor", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Welcome to the Manifest Editor tool..
        /// </summary>
        internal static string WelcomeToTheManifestTool {
            get {
                return ResourceManager.GetString("WelcomeToTheManifestTool", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Yes.
        /// </summary>
        internal static string YesString {
            get {
                return ResourceManager.GetString("YesString", resourceCulture);
            }
        }
    }
}
